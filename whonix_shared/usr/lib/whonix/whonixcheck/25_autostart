#!/bin/bash

check_autostart() {
   trap "error_handler" ERR

   ## This script gets run by:
   ## - /etc/profile.d/
   ## - /etc/xdg/autostart/whonixcheck.desktop
   ## - /etc/cron.d/

   ## If it was not autostarted the user is free to re-run the checks.
   if [ ! "$AUTOSTARTED" = "1" ]; then
      return 0
   fi

   ## To prevent issuing leaving a clear network fingerprint,
   ## we add a random delay.

   ## Random delay between 0 and 500 seconds.
   local DELAY="$(( 100+($(od -An -N2 -i /dev/random) )%(300-0+1) ))"

   ## 60 seconds minimum delay.
   local DELAY="$(expr "$DELAY" + "60")" || true

   ## For debugging.
   #local DELAY="10"

   if [ "$NOCHECKLASTRUN" = "1" ]; then
      RECENTLY_RUN="0"
   fi   
   
   if [ "$RECENTLY_RUN" = "0" ]; then
      if [ "$NOSLEEP" = "1" ]; then
         return 0
      else
         local MSG="$SCRIPTNAME has not completed for more than one day. Running $SCRIPTNAME again in "$DELAY" seconds..."
         
         $output ${output_opts[@]} --channel "both" --type "--info" --title "$TITLE" --message "$MSG" --waitmessage

         ## "|| true", so the sleep process can be killed for debugging.
         sleep "$DELAY"
         local sleep_pid="$!"
         wait "$sleep_pid" || true
      fi
   else
      touch "/var/run/whonix/whonixcheck/"$SCRIPTNAME"_recently_run"
   
      ## If it was run by cron and there is nothing to tell, say nothing,
      ## only send a debug message, if debugging is enabled.
      if [ "$RUN_BY_CRON" = "1" ]; then
         local MSG="$SCRIPTNAME started by cron. $SCRIPTNAME checks completed $DIFFERENCE seconds ago. No need to run again."       
         $output ${output_opts[@]} --channel "both" --type "--info" --title "$TITLE" --message "$MSG" --passive
         
         EXIT_CODE="0"
         cleanup
         return 0
      fi

      local MSG="No need to run $SCRIPTNAME, was run less than one day ago. You could still start $SCRIPTNAME manually."
      $output ${output_opts[@]} --channel "both" --type "--info" --title "$TITLE" --message "$MSG" --passive
      
      EXIT_CODE="0"
      cleanup
      return 0
   fi
}
