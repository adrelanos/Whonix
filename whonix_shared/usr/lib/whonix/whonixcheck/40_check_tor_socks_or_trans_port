#!/bin/bash

check_tor_socks_or_trans_port() {
   trap "error_handler" ERR
   
   ## debugging hints
   #CURL=echo
   #VERIFY_TEMPDIR=/home/user   
   
   local LINK="https://check.torproject.org" 
     
   if [ "$1" = "SocksPort" ]; then
      if [ "$WHONIXCHECK_DISABLE_SOCKS_PORT_TEST" = "1" ]; then
         local MSG="SocksPort Test: Not testing Tor's SocksPort, because you set WHONIXCHECK_DISABLE_SOCKS_PORT_TEST=\"1\" to deactivate this."
         $output ${output_opts[@]} --channel "both" --type "--info" --title "$TITLE" --message "$MSG"
         return 0
      fi

      local MSG="SocksPort Test: Testing Tor's SocksPort..."
      $output ${output_opts[@]} --channel "echo" --type "--info" --title "$TITLE" --message "$MSG"

      local SOCKS_PORT_WHONIXCHECK="9110"
     
      CHECK_TOR_RESULT_SOCKS_PORT="0"
      
      CHECK_TOR_OUT_FILE="check_tpo_tor_socksport.html"
      
      ## Ensuring normal curl activity can not be linked to whonixcheck,
      ## by using a SocksPort, which is solely used by whonixcheck.
      $CURL \
         --fail \
         $CURL_VERBOSE \
         --socks5-hostname socks5h://"$GATEWAY_IP":"$SOCKS_PORT_WHONIXCHECK"/ \
         --tlsv1 \
         --proto =https \
         --max-time 180 \
         --output ""$VERIFY_TEMPDIR"/"$CHECK_TOR_OUT_FILE"" \
         "$LINK" \
         || { CHECK_TOR_RESULT_SOCKS_PORT="$?" ; true; };

      if [ ! "$CHECK_TOR_RESULT_SOCKS_PORT" = "0" ]; then
         if [ "$VM" = "Whonix-Gateway" ]; then

            local MSG="\
SocksPort Test Result:
https://check.torproject.org was not reachable.
You could check, if you can reach https://check.torproject.org via the Tor Browser Bundle.
(curl return code: "$CHECK_TOR_RESULT_SOCKS_PORT")"

         elif [ "$VM" = "Whonix-Workstation" ]; then         
         
            local MSG="\
SocksPort Test Result:
https://check.torproject.org was not reachable.
You could check, if you can reach https://check.torproject.org via the Tor Browser Bundle.
(curl return code: "$CHECK_TOR_RESULT_SOCKS_PORT")"

         else
         
            local MSG="$FUNCNAME: This is neither Whonix-Gateway nor Whonix-Workstation. Please report this bug!"
            
         fi

         $output ${output_opts[@]} --channel "both" --type "--error" --title "$TITLE" --message "$MSG"

         return 0
      fi
   elif [ "$1" = "TransPort" ]; then
      if [ "$WHONIXCHECK_DISABLE_TRANS_PORT_TEST" = "1" ]; then
         local MSG="TransPort Test: Not testing Tor's TransPort, because you set WHONIXCHECK_DISABLE_TRANS_PORT_TEST=\"1\" to deactivate this."
         $output ${output_opts[@]} --channel "both" --type "--info" --title "$TITLE" --message "$MSG"
         return 0      
      fi
      
      ## Do not test for stream isolation if Tor detection failed.
      ## This variable may be set to 1, during the first run of this function.
      if [ "$NOT_USING_TOR" = "1" ]; then
         local MSG="TransPort Test: Not testing Tor's TransPort, because Tor could not be detected on Tor's SocksPort."
         $output ${output_opts[@]} --channel "echo" --type "--info" --title "$TITLE" --message "$MSG"
         return 0
      fi
      
      if [ ! "$CHECK_TOR_RESULT_SOCKS_PORT" = "0" ]; then
         local MSG="\
TransPort Test:
Not checking Tor's TransPort, because SocksPort test failed already."
         $output ${output_opts[@]} --channel "both" --type "--error" --title "$TITLE" --message "$MSG"
         return 0
      fi      
   
      local MSG="TransPort Test: Testing Tor's TransPort..."
      $output ${output_opts[@]} --channel "echo" --type "--info" --title "$TITLE" --message "$MSG"
   
      CHECK_TOR_RESULT_TRANS_PORT="0"

      CHECK_TOR_OUT_FILE="check_tpo_tor_transport.html"

      ## For production:
      $CURL \
         --fail \
         $CURL_VERBOSE \
         --tlsv1 \
         --proto =https \
         --max-time 180 \
         --output ""$VERIFY_TEMPDIR"/"$CHECK_TOR_OUT_FILE"" \
         "$LINK" \
         || { CHECK_TOR_RESULT_TRANS_PORT="$?" ; true; };
     
      if [ ! "$CHECK_TOR_RESULT_TRANS_PORT" = "0" ]; then
         local MSG="\
TransPort Test Result:
Tor's TransPort was not reachable.
(curl return code: "$CHECK_TOR_RESULT_TRANS_PORT")

(
 If you disabled Tor's TransPort, please disable this check, see whonixcheck /etc/whonix.d/30_whonixcheck_default configuration file.
)"
         $output ${output_opts[@]} --channel "both" --type "--error" --title "$TITLE" --message "$MSG"
         return 0
      fi
   else
     local MSG="Trans/Socks-Port Test Error: \$1 is neither TransPort nor SocksPort. Please report this BUG!"
     $output ${output_opts[@]} --channel "both" --type "--error" --title "$TITLE" --message "$MSG"
     return 0
   fi

   local TOR_OR_NOT=""
   local TOR_OR_NOT="$(grep --no-messages "Congratulations" ""$VERIFY_TEMPDIR"/"$CHECK_TOR_OUT_FILE"")"
   
   local IP="IP not detected (1). Please report this bug!"
   local IP="$(grep --no-messages "IP" ""$VERIFY_TEMPDIR"/"$CHECK_TOR_OUT_FILE"")"
   if [ "$IP" = "" ]; then
      local IP="IP not detected (2). Please report this bug!"
   else
      local IP="$(echo "$IP" | sed 's/Your IP address appears to be//g')"
      local IP="$(echo "$IP" | sed 's/<br>//g')"
      local IP="$(echo "$IP" | sed 's/<b>//g')"
      local IP="$(echo "$IP" | sed 's/<\/b>//g')"
      local IP="$(echo "$IP" | sed 's/://g')"
      local IP="$(echo "$IP" | sed 's/ //g')"

      ## Store IP for later use in memory.
      if [ "$1" = "TransPort" ]; then
         IP_TRANS_PORT="$IP"
      elif [ "$1" = "SocksPort" ]; then
         IP_SOCKS_PORT="$IP"
      fi
   fi

   ## Check if connected to Tor or not,
   ## and choose which message to show.
   if [ ! "$TOR_OR_NOT" = "" ]; then
      if [ "$1" = "TransPort" ]; then
         local MSG="TransPort Test Result: Connected to Tor. IP: $IP"
      elif [ "$1" = "SocksPort" ]; then
         local MSG="SocksPort Test Result: Connected to Tor. IP: $IP"
      fi      
      $output ${output_opts[@]} --channel "both" --type "--info" --title "$TITLE" --message "$MSG"
      return 0
   else
      NOT_USING_TOR="1"

      if [ "$1" = "TransPort" ]; then
         if [ "$WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE" = "1" ]; then
            local MSG="\
TransPort Test Result:
Tor not detected, but you set WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE="1" to ignore this.
IP: $IP"
            $output ${output_opts[@]} --channel "both" --type "--info" --title "$TITLE" --message "$MSG"
            return 0
         else
            local MSG="\
TransPort Test Result:
Looks like you are not connected through Tor!
IP: $IP

Whonixcheck aborted!

Possible reasons:
- There could be something wrong.
- You added a VPN.
- You added a transproxy.
- It's a false positive. https://check.torproject.org fails in some cases to detect exit nodes.

(
 VPN/transproxy users:
 In case you added a VPN/transproxy and do not want whonixcheck to stop once this has been detected, see whonixcheck /etc/whonix.d/30_whonixcheck_default configuration file.
)

You could try to find out if this IP is/was a Tor exit node using a search engine or ExoneraTor:
https://metrics.torproject.org/exonerator.html"

            $output ${output_opts[@]} --channel "both" --type "--error" --title "$TITLE" --message "$MSG"
            EXIT_CODE="1"
            cleanup
            return 0
         fi
      elif [ "$1" = "SocksPort" ]; then
         local MSG="\
SocksPort Test Result:
Tor's SocksPort: Looks like you are not connected through Tor!
IP: $IP

Whonixcheck aborted!

Possible reasons:
- There could be something wrong.
- It's a false positive. https://check.torproject.org fails in some cases to detect exit nodes.

You could try to find out if this IP is/was a Tor exit node using a search engine or ExoneraTor:
https://metrics.torproject.org/exonerator.html"
         $output ${output_opts[@]} --channel "both" --type "--error" --title "$TITLE" --message "$MSG"
         EXIT_CODE="1"
         cleanup
         return 0
      fi
   fi

}
